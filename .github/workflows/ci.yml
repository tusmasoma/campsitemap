name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true # Git LFS を有効にする

      - name: Install Git LFS
        run: |
          sudo apt-get install git-lfs
          git lfs install

      - name: Setup .env file
        working-directory: ./docker/back/django_project
        run: echo "${{ secrets.LOCAL_ENV_FILE }}" > .local.env

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}
            refs/head/main

      - name: Build backend image
        uses: docker/build-push-action@v4
        with:
          push: false
          builder: ${{ steps.buildx.outputs.name }}
          tags: my-backend-image:latest
          load: true
          context: .
          file: ./docker/back/Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      #- name: Save cache
      #  if: always()
      #  uses: actions/cache@v3
      #  with:
      #    path: /tmp/.buildx-cache-new
      #    key: ${{ runner.os }}-buildx-${{ github.sha }}

      - name: Build and start the services
        run: |
          docker compose -f docker-compose.ci.yml build
          docker compose -f docker-compose.ci.yml up -d
          echo "Waiting for Django server to be ready..."
          while true; do
            if docker compose logs back 2>&1 | grep -q "Quit the server with CONTROL-C."; then
              echo "Django server is ready."
              break
            fi
            sleep 1
          done

      - name: Run Django tests
        run: |
          docker compose -f docker-compose.ci.yml run back python manage.py migrate
          docker compose -f docker-compose.ci.yml exec back python manage.py test -r

      - name: Debug Cache Directory
        run: ls -al /tmp/.buildx-cache

      - name: Debug New Cache Directory
        run: ls -al /tmp/.buildx-cache-new

      #- name: Cleanup
      #  if: always()
      #  run: docker compose -f docker-compose.ci.yml down
