name: Django CD with Migration Check

on: [push]

jobs:
  check-migrations:
    runs-on: ubuntu-latest
    outputs:
      models_changed: ${{ steps.check-migrations.outputs.models_changed }}
      migrations_changed: ${{ steps.check-migrations.outputs.migrations_changed }}
    steps:
     - uses: actions/checkout@v3
       
     - name: Check for changes in models.py and migrations
       id: check-migrations
       run: |
         echo "github.event.before=${{ github.event.before }}"
         echo "github.sha=${{ github.sha }}"
         if [ -z "${{ github.event.before }}" ] || [ "${{ github.event.before }}" == "0000000000000000000000000000000000000000" ]; then
           echo "No previous commit to compare."
           models_changed='true'
           migrations_changed='true'
         else
           models_changed=$(git diff --name-only ${{ github.sha }} ${{ github.event.before }} | grep -q 'models.py' && echo 'true' || echo 'false')
           migrations_changed=$(git diff --name-only ${{ github.sha }} ${{ github.event.before }} | grep -q 'migrations/' && echo 'true' || echo 'false')
         fi
         echo "models_changed=${models_changed}" >> $GITHUB_OUTPUT
         echo "migrations_changed=${migrations_changed}" >> $GITHUB_OUTPUT

         echo "models_changed=${models_changed}"
         echo "migrations_changed=${migrations_changed}"

  deploy:
    needs: check-migrations
    if: ${{ needs.check-migrations.outputs.models_changed == 'false' && needs.check-migrations.outputs.migrations_changed == 'false' }}
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_REGION }}

    - name: Execute commands on EC2 instance
      run: |
        command_id=$(aws ssm send-command --instance-ids ${{ secrets.EC2_INSTANCE_ID }} --document-name "AWS-RunShellScript" --parameters "commands=[
          \"sudo su - ec2-user -c 'sudo chown -R ec2-user:ec2-user /home/ec2-user/campsitemap && cd /home/ec2-user/campsitemap && git pull origin main && docker compose down && docker compose build && docker compose up -d'\",
        ]" --query "Command.CommandId" --output text)
        aws ssm wait command-executed --instance-id ${{ secrets.EC2_INSTANCE_ID }} --command-id $command_id
        output=$(aws ssm get-command-invocation --command-id $command_id --instance-id ${{ secrets.EC2_INSTANCE_ID }} --query "StandardOutputContent" --output text)
        echo "$output"

