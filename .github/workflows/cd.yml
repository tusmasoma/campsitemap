name: Django CD with Migration Check

on: [push]

jobs:
  check-migrations:
    runs-on: ubuntu-latest
    outputs:
      needs-migration: ${{ steps.check-migrations.outputs.needs-migration }}
    steps:
     - uses: actions/checkout@v3
     - name: Setup .env file
       working-directory: ./docker/back/django_project
       run: echo "${{ secrets.LOCAL_ENV_FILE }}" > .local.env
       
     - name: Build and start the services
       run: |
         docker compose build
         docker compose up -d
         sleep 15s

     - name: Check for migrations
       id: check-migrations
       run: |
         docker compose exec back python manage.py makemigrations --dry-run --check
         echo "needs-migration=$?" >> $GITHUB_ENV
       continue-on-error: true

  deploy:
    needs: check-migrations
    if: ${{ needs.check-migrations.outputs.needs-migration == '0' }}
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_REGION }}

    - name: Execute commands on EC2 instance
      run: |
        command_id=$(aws ssm send-command --instance-ids ${{ secrets.EC2_INSTANCE_ID }} --document-name "AWS-RunShellScript" --parameters "commands=[
          \"sudo su - ec2-user -c 'chown -R ec2-user:ec2-user /home/ec2-user/campsitemap && cd /home/ec2-user/campsitemap && git pull origin main && docker compose down && docker compose build && docker compose up'\",
        ]" --query "Command.CommandId" --output text)
        aws ssm wait command-executed --instance-id ${{ secrets.EC2_INSTANCE_ID }} --command-id $command_id
        output=$(aws ssm get-command-invocation --command-id $command_id --instance-id ${{ secrets.EC2_INSTANCE_ID }} --query "StandardOutputContent" --output text)
        echo "$output"

