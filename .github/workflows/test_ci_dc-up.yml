name: Django CI
on:
  push:
    branches: []
  pull_request:
    branches: []
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY_DB: campfinder_db
  ECR_REPOSITORY_NGINX: campfinder_nginx
  ECR_REPOSITORY_BACK: campfinder_back
  ECR_REGISTRY: public.ecr.aws/x4o0n4b7

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .env file
        working-directory: ./docker/back/django_project
        run: echo "${{ secrets.LOCAL_ENV_FILE }}" > .local.env
       
      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}

      - name: Download DB volume data from S3
        run: |
          aws s3 cp s3://campsitemap/db_data.tar.gz db_data.tar.gz
          mkdir -p ./path/to/unpacked/db_data
          tar -xzf db_data.tar.gz -C ./path/to/unpacked/db_data

      - name: Build and start the services
        run: |
          docker compose -f docker-compose.ci.yml up -d
         
          echo "Waiting for Django server to be ready..."
          while true; do
            if docker compose logs back 2>&1 | grep -q "Quit the server with CONTROL-C."; then
              echo "Django server is ready."
              break
            fi
            sleep 1
          done
         
      - name: Run Django test
        run: |
          docker compose exec back python manage.py test -r
      - name: Cleanup
        if: always()
        run: docker compose down -v
